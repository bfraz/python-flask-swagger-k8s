---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"generation":1,"labels":{"app":"flask-rest-api-swagger"},"name":"flask-rest-api-swagger","namespace":"daimler"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"flask-rest-api-swagger"}},"template":{"metadata":{"labels":{"app":"flask-rest-api-swagger"}},"spec":{"containers":[{"image":"bfraz/flask-swagger-rest-api-demo:v1","imagePullPolicy":"Always","name":"flask-api","ports":[{"containerPort":8888,"name":"http","protocol":"TCP"}]}]}}}}
  generation: 3
  labels:
    app: flask-rest-api-swagger
  name: flask-rest-api-swagger
  namespace: daimler
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flask-rest-api-swagger
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: flask-rest-api-swagger
    spec:
      containers:
      - image: bfraz/flask-swagger-rest-api-demo:v3
        imagePullPolicy: Always
        name: flask-api
        ports:
        - containerPort: 31722
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
